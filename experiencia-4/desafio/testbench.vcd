$date
	Sat Jan 27 21:48:30 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module circuito_exp4_tb $end
$var wire 1 ! pronto_out $end
$var wire 1 " errou_out $end
$var wire 7 # db_memoria_out [6:0] $end
$var wire 1 $ db_iniciar_out $end
$var wire 1 % db_igual_out $end
$var wire 7 & db_estado_out [6:0] $end
$var wire 7 ' db_contagem_out [6:0] $end
$var wire 7 ( db_chaves_out [6:0] $end
$var wire 1 ) acertou_out $end
$var reg 32 * caso [31:0] $end
$var reg 4 + chaves_in [3:0] $end
$var reg 1 , clock_in $end
$var reg 1 - iniciar_in $end
$var reg 1 . reset_in $end
$scope module dut $end
$var wire 4 / chaves [3:0] $end
$var wire 1 , clock $end
$var wire 1 % db_igual $end
$var wire 1 $ db_iniciar $end
$var wire 1 - iniciar $end
$var wire 1 . reset $end
$var wire 1 0 zeraR $end
$var wire 1 1 zeraC $end
$var wire 1 2 registraR $end
$var wire 1 ! pronto $end
$var wire 1 3 igual $end
$var wire 1 4 fimC $end
$var wire 1 " errou $end
$var wire 4 5 db_memoria_hex [3:0] $end
$var wire 7 6 db_memoria [6:0] $end
$var wire 4 7 db_estado_hex [3:0] $end
$var wire 7 8 db_estado [6:0] $end
$var wire 4 9 db_contagem_hex [3:0] $end
$var wire 7 : db_contagem [6:0] $end
$var wire 4 ; db_chaves_hex [3:0] $end
$var wire 7 < db_chaves [6:0] $end
$var wire 1 = contaC $end
$var wire 1 ) acertou $end
$scope module fd $end
$var wire 4 > chaves [3:0] $end
$var wire 1 , clock $end
$var wire 4 ? db_chaves [3:0] $end
$var wire 4 @ db_contagem [3:0] $end
$var wire 4 A db_memoria [3:0] $end
$var wire 1 0 zeraR $end
$var wire 1 1 zeraC $end
$var wire 4 B s_endereco [3:0] $end
$var wire 4 C s_dado [3:0] $end
$var wire 4 D s_chaves [3:0] $end
$var wire 1 2 registraR $end
$var wire 1 4 fimC $end
$var wire 1 = contaC $end
$var wire 1 3 chavesIgualMemoria $end
$scope module comparador $end
$var wire 1 E AEBi $end
$var wire 1 3 AEBo $end
$var wire 1 F AGBi $end
$var wire 1 G AGBo $end
$var wire 1 H ALBi $end
$var wire 1 I ALBo $end
$var wire 5 J CSL [4:0] $end
$var wire 5 K CSG [4:0] $end
$var wire 4 L B [3:0] $end
$var wire 4 M A [3:0] $end
$upscope $end
$scope module contador $end
$var wire 4 N D [3:0] $end
$var wire 1 , clock $end
$var wire 1 O clr $end
$var wire 1 P ent $end
$var wire 1 Q ld $end
$var wire 1 = enp $end
$var reg 4 R Q [3:0] $end
$var reg 1 4 rco $end
$upscope $end
$scope module memoria $end
$var wire 4 S address [3:0] $end
$var wire 1 , clock $end
$var reg 4 T data_out [3:0] $end
$upscope $end
$scope module registrador $end
$var wire 4 U D [3:0] $end
$var wire 4 V Q [3:0] $end
$var wire 1 , clock $end
$var wire 1 2 enable $end
$var wire 1 0 clear $end
$var reg 4 W IQ [3:0] $end
$upscope $end
$upscope $end
$scope module hexa7seg_CHAVES $end
$var wire 4 X hexa [3:0] $end
$var reg 7 Y display [6:0] $end
$upscope $end
$scope module hexa7seg_CONT $end
$var wire 4 Z hexa [3:0] $end
$var reg 7 [ display [6:0] $end
$upscope $end
$scope module hexa7seg_EST $end
$var wire 4 \ hexa [3:0] $end
$var reg 7 ] display [6:0] $end
$upscope $end
$scope module hexa7seg_MEM $end
$var wire 4 ^ hexa [3:0] $end
$var reg 7 _ display [6:0] $end
$upscope $end
$scope module uc $end
$var wire 1 , clock $end
$var wire 1 4 fimC $end
$var wire 1 3 igual $end
$var wire 1 - iniciar $end
$var wire 1 . reset $end
$var reg 4 ` Eatual [3:0] $end
$var reg 4 a Eprox [3:0] $end
$var reg 1 ) acertou $end
$var reg 1 = contaC $end
$var reg 4 b db_estado [3:0] $end
$var reg 1 " errou $end
$var reg 1 ! pronto $end
$var reg 1 2 registraR $end
$var reg 1 1 zeraC $end
$var reg 1 0 zeraR $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx b
b0 a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
b0 U
bx T
bx S
bx R
1Q
1P
xO
b0 N
bx M
bx L
bx K
bx J
xI
0H
xG
0F
1E
bx D
bx C
bx B
bx A
bx @
bx ?
b0 >
x=
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
04
x3
x2
x1
x0
b0 /
0.
0-
1,
b0 +
b0 *
x)
bx (
bx '
bx &
x%
0$
bx #
x"
x!
$end
#10
0,
#20
b1000000 (
b1000000 <
b1000000 Y
b0 ;
b0 ?
b0 X
b0 D
b0 L
b0 V
b0 W
b1000000 &
b1000000 8
b1000000 ]
0O
b0 7
b0 \
b0 b
0)
0"
0!
0=
02
10
11
b0 `
1,
b1 *
#30
1.
0,
#40
b1000000 '
b1000000 :
b1000000 [
b0 9
b0 @
b0 Z
b0 B
b0 R
b0 S
1,
#50
0,
b10 *
0.
#60
0I
1G
0%
03
b11110 J
b1111001 #
b1111001 6
b1111001 _
b0 K
b1 5
b1 A
b1 ^
b1 C
b1 M
b1 T
1,
#70
b1 a
1$
1-
b1 +
b1 /
b1 >
b1 U
0,
b11 *
#80
b1111001 &
b1111001 8
b1111001 ]
b1 7
b1 \
b1 b
b100 a
b1 `
1,
#90
0,
b100 *
0$
0-
#100
b11001 &
b11001 8
b11001 ]
1O
b100 7
b100 \
b100 b
12
00
01
b101 a
b100 `
1,
#110
0,
b101 *
#120
0G
b10010 &
b10010 8
b10010 ]
1%
13
b11111 K
b1111001 (
b1111001 <
b1111001 Y
b101 7
b101 \
b101 b
02
b110 a
b11111 J
b1 ;
b1 ?
b1 X
b1 D
b1 L
b1 V
b1 W
b101 `
1,
#130
b10 +
b10 /
b10 >
b10 U
0,
b110 *
#140
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#150
0,
b111 *
#160
b11001 &
b11001 8
b11001 ]
b1111001 '
b1111001 :
b1111001 [
b100 7
b100 \
b100 b
0=
12
b101 a
b1 9
b1 @
b1 Z
b1 B
b1 R
b1 S
b100 `
1,
#170
0,
#180
b10010 &
b10010 8
b10010 ]
b100100 (
b100100 <
b100100 Y
b101 7
b101 \
b101 b
02
b110 a
b10 ;
b10 ?
b10 X
b10 D
b10 L
b10 V
b10 W
b101 `
0G
1%
13
b11111 J
b100100 #
b100100 6
b100100 _
b11111 K
b10 5
b10 A
b10 ^
b10 C
b10 M
b10 T
1,
#190
0,
#200
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#210
b100 +
b100 /
b100 >
b100 U
0,
b1000 *
#220
b11001 &
b11001 8
b11001 ]
b100100 '
b100100 :
b100100 [
b100 7
b100 \
b100 b
0=
12
b101 a
b10 9
b10 @
b10 Z
b10 B
b10 R
b10 S
b100 `
1,
#230
0,
#240
b10010 &
b10010 8
b10010 ]
b11001 (
b11001 <
b11001 Y
b101 7
b101 \
b101 b
02
b110 a
b100 ;
b100 ?
b100 X
b100 D
b100 L
b100 V
b100 W
b101 `
0G
1%
13
b11111 J
b11001 #
b11001 6
b11001 _
b11111 K
b100 5
b100 A
b100 ^
b100 C
b100 M
b100 T
1,
#250
0,
#260
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#270
b1000 +
b1000 /
b1000 >
b1000 U
0,
b1001 *
#280
b11001 &
b11001 8
b11001 ]
b110000 '
b110000 :
b110000 [
b100 7
b100 \
b100 b
0=
12
b101 a
b11 9
b11 @
b11 Z
b11 B
b11 R
b11 S
b100 `
1,
#290
0,
#300
b10010 &
b10010 8
b10010 ]
b0 (
b0 <
b0 Y
b101 7
b101 \
b101 b
02
b110 a
b1000 ;
b1000 ?
b1000 X
b1000 D
b1000 L
b1000 V
b1000 W
b101 `
0G
1%
13
b11111 J
b0 #
b0 6
b0 _
b11111 K
b1000 5
b1000 A
b1000 ^
b1000 C
b1000 M
b1000 T
1,
#310
0,
#320
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#330
b100 +
b100 /
b100 >
b100 U
0,
b1010 *
#340
b11001 &
b11001 8
b11001 ]
b11001 '
b11001 :
b11001 [
b100 7
b100 \
b100 b
0=
12
b101 a
b100 9
b100 @
b100 Z
b100 B
b100 R
b100 S
b100 `
1,
#350
0,
#360
b10010 &
b10010 8
b10010 ]
b11001 (
b11001 <
b11001 Y
b101 7
b101 \
b101 b
02
b110 a
b100 ;
b100 ?
b100 X
b100 D
b100 L
b100 V
b100 W
b101 `
0I
1%
13
b11111 J
b11001 #
b11001 6
b11001 _
b11111 K
b100 5
b100 A
b100 ^
b100 C
b100 M
b100 T
1,
#370
0,
#380
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#390
b10 +
b10 /
b10 >
b10 U
0,
b1011 *
#400
b11001 &
b11001 8
b11001 ]
b10010 '
b10010 :
b10010 [
b100 7
b100 \
b100 b
0=
12
b101 a
b101 9
b101 @
b101 Z
b101 B
b101 R
b101 S
b100 `
1,
#410
0,
#420
b10010 &
b10010 8
b10010 ]
b100100 (
b100100 <
b100100 Y
b101 7
b101 \
b101 b
02
b110 a
b10 ;
b10 ?
b10 X
b10 D
b10 L
b10 V
b10 W
b101 `
0I
1%
13
b11111 J
b100100 #
b100100 6
b100100 _
b11111 K
b10 5
b10 A
b10 ^
b10 C
b10 M
b10 T
1,
#430
0,
#440
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#450
b1 +
b1 /
b1 >
b1 U
0,
b1100 *
#460
b11001 &
b11001 8
b11001 ]
b10 '
b10 :
b10 [
b100 7
b100 \
b100 b
0=
12
b101 a
b110 9
b110 @
b110 Z
b110 B
b110 R
b110 S
b100 `
1,
#470
0,
#480
b10010 &
b10010 8
b10010 ]
b1111001 (
b1111001 <
b1111001 Y
b101 7
b101 \
b101 b
02
b110 a
b1 ;
b1 ?
b1 X
b1 D
b1 L
b1 V
b1 W
b101 `
0I
1%
13
b11111 J
b1111001 #
b1111001 6
b1111001 _
b11111 K
b1 5
b1 A
b1 ^
b1 C
b1 M
b1 T
1,
#490
0,
#500
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#510
0,
b1101 *
#520
b11001 &
b11001 8
b11001 ]
b1111000 '
b1111000 :
b1111000 [
b100 7
b100 \
b100 b
0=
12
b101 a
b111 9
b111 @
b111 Z
b111 B
b111 R
b111 S
b100 `
1,
#530
0,
#540
b10010 &
b10010 8
b10010 ]
b101 7
b101 \
b101 b
02
b110 a
b101 `
1,
#550
0,
#560
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#570
b10 +
b10 /
b10 >
b10 U
0,
b1110 *
#580
b11001 &
b11001 8
b11001 ]
b0 '
b0 :
b0 [
b100 7
b100 \
b100 b
0=
12
b101 a
b1000 9
b1000 @
b1000 Z
b1000 B
b1000 R
b1000 S
b100 `
1,
#590
0,
#600
b10010 &
b10010 8
b10010 ]
b100100 (
b100100 <
b100100 Y
b101 7
b101 \
b101 b
02
b110 a
b10 ;
b10 ?
b10 X
b10 D
b10 L
b10 V
b10 W
b101 `
0G
1%
13
b11111 J
b100100 #
b100100 6
b100100 _
b11111 K
b10 5
b10 A
b10 ^
b10 C
b10 M
b10 T
1,
#610
0,
#620
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#630
0,
b1111 *
#640
b11001 &
b11001 8
b11001 ]
b10000 '
b10000 :
b10000 [
b100 7
b100 \
b100 b
0=
12
b101 a
b1001 9
b1001 @
b1001 Z
b1001 B
b1001 R
b1001 S
b100 `
1,
#650
0,
#660
b10010 &
b10010 8
b10010 ]
b101 7
b101 \
b101 b
02
b110 a
b101 `
1,
#670
0,
#680
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#690
b100 +
b100 /
b100 >
b100 U
0,
b10000 *
#700
b11001 &
b11001 8
b11001 ]
b1000 '
b1000 :
b1000 [
b100 7
b100 \
b100 b
0=
12
b101 a
b1010 9
b1010 @
b1010 Z
b1010 B
b1010 R
b1010 S
b100 `
1,
#710
0,
#720
b10010 &
b10010 8
b10010 ]
b11001 (
b11001 <
b11001 Y
b101 7
b101 \
b101 b
02
b110 a
b100 ;
b100 ?
b100 X
b100 D
b100 L
b100 V
b100 W
b101 `
0G
1%
13
b11111 J
b11001 #
b11001 6
b11001 _
b11111 K
b100 5
b100 A
b100 ^
b100 C
b100 M
b100 T
1,
#730
0,
#740
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#750
0,
#760
b11001 &
b11001 8
b11001 ]
b11 '
b11 :
b11 [
b100 7
b100 \
b100 b
0=
12
b101 a
b1011 9
b1011 @
b1011 Z
b1011 B
b1011 R
b1011 S
b100 `
1,
#770
0,
#780
b10010 &
b10010 8
b10010 ]
b101 7
b101 \
b101 b
02
b110 a
b101 `
1,
#790
0,
#800
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#810
b1000 +
b1000 /
b1000 >
b1000 U
0,
#820
b11001 &
b11001 8
b11001 ]
b1000110 '
b1000110 :
b1000110 [
b100 7
b100 \
b100 b
0=
12
b101 a
b1100 9
b1100 @
b1100 Z
b1100 B
b1100 R
b1100 S
b100 `
1,
#830
0,
#840
b10010 &
b10010 8
b10010 ]
b0 (
b0 <
b0 Y
b101 7
b101 \
b101 b
02
b110 a
b1000 ;
b1000 ?
b1000 X
b1000 D
b1000 L
b1000 V
b1000 W
b101 `
0G
1%
13
b11111 J
b0 #
b0 6
b0 _
b11111 K
b1000 5
b1000 A
b1000 ^
b1000 C
b1000 M
b1000 T
1,
#850
0,
#860
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#870
0,
#880
b11001 &
b11001 8
b11001 ]
b100001 '
b100001 :
b100001 [
b100 7
b100 \
b100 b
0=
12
b101 a
b1101 9
b1101 @
b1101 Z
b1101 B
b1101 R
b1101 S
b100 `
1,
#890
0,
#900
b10010 &
b10010 8
b10010 ]
b101 7
b101 \
b101 b
02
b110 a
b101 `
1,
#910
0,
#920
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#930
b1 +
b1 /
b1 >
b1 U
0,
#940
b11001 &
b11001 8
b11001 ]
b110 '
b110 :
b110 [
b100 7
b100 \
b100 b
0=
12
b101 a
b1110 9
b1110 @
b1110 Z
b1110 B
b1110 R
b1110 S
b100 `
1,
#950
0,
#960
b10010 &
b10010 8
b10010 ]
b1111001 (
b1111001 <
b1111001 Y
b101 7
b101 \
b101 b
02
b110 a
b1 ;
b1 ?
b1 X
b1 D
b1 L
b1 V
b1 W
b101 `
0I
1%
13
b11111 J
b1111001 #
b1111001 6
b1111001 _
b11111 K
b1 5
b1 A
b1 ^
b1 C
b1 M
b1 T
1,
#970
0,
#980
b10 &
b10 8
b10 ]
b110 7
b110 \
b110 b
1=
b100 a
b110 `
1,
#990
b100 +
b100 /
b100 >
b100 U
0,
#1000
b11001 &
b11001 8
b11001 ]
14
b1110 '
b1110 :
b1110 [
b100 7
b100 \
b100 b
0=
12
b101 a
b1111 9
b1111 @
b1111 Z
b1111 B
b1111 R
b1111 S
b100 `
1,
#1010
0,
#1020
b10010 &
b10010 8
b10010 ]
b11001 (
b11001 <
b11001 Y
b101 7
b101 \
b101 b
02
b1101 a
b100 ;
b100 ?
b100 X
b100 D
b100 L
b100 V
b100 W
b101 `
0G
1%
13
b11111 J
b11001 #
b11001 6
b11001 _
b11111 K
b100 5
b100 A
b100 ^
b100 C
b100 M
b100 T
1,
#1030
0,
#1040
b100001 &
b100001 8
b100001 ]
b1101 7
b1101 \
b1101 b
1)
1!
b0 a
b1101 `
1,
#1050
0,
b1100011 *
#1060
1G
0%
03
b11 K
b1000000 (
b1000000 <
b1000000 Y
b11011 J
b0 ;
b0 ?
b0 X
b0 D
b0 L
b0 V
b0 W
b1000000 &
b1000000 8
b1000000 ]
0O
b0 7
b0 \
b0 b
0)
0!
10
11
b0 `
1,
#1070
0,
#1080
04
b1000000 '
b1000000 :
b1000000 [
b0 9
b0 @
b0 Z
b0 B
b0 R
b0 S
1,
#1090
0,
#1100
b11110 J
b1111001 #
b1111001 6
b1111001 _
b0 K
b1 5
b1 A
b1 ^
b1 C
b1 M
b1 T
1,
#1110
0,
#1120
1,
#1130
0,
#1140
1,
