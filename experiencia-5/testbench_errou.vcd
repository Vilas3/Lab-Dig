$date
	Sat Feb  3 16:47:38 2024
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ns
$end

$scope module circuito_exp5_tb_errou $end
$var parameter 32 ! clockPeriod $end
$var reg 1 " clock_in $end
$var reg 1 # reset_in $end
$var reg 1 $ iniciar_in $end
$var reg 4 % chaves_in [3:0] $end
$var wire 1 & acertou_out $end
$var wire 1 ' errou_out $end
$var wire 1 ( pronto_out $end
$var wire 1 ) leds_out [3] $end
$var wire 1 * leds_out [2] $end
$var wire 1 + leds_out [1] $end
$var wire 1 , leds_out [0] $end
$var wire 1 - db_igual_out $end
$var wire 1 . db_contagem_out [6] $end
$var wire 1 / db_contagem_out [5] $end
$var wire 1 0 db_contagem_out [4] $end
$var wire 1 1 db_contagem_out [3] $end
$var wire 1 2 db_contagem_out [2] $end
$var wire 1 3 db_contagem_out [1] $end
$var wire 1 4 db_contagem_out [0] $end
$var wire 1 5 db_memoria_out [6] $end
$var wire 1 6 db_memoria_out [5] $end
$var wire 1 7 db_memoria_out [4] $end
$var wire 1 8 db_memoria_out [3] $end
$var wire 1 9 db_memoria_out [2] $end
$var wire 1 : db_memoria_out [1] $end
$var wire 1 ; db_memoria_out [0] $end
$var wire 1 < db_estado_out [6] $end
$var wire 1 = db_estado_out [5] $end
$var wire 1 > db_estado_out [4] $end
$var wire 1 ? db_estado_out [3] $end
$var wire 1 @ db_estado_out [2] $end
$var wire 1 A db_estado_out [1] $end
$var wire 1 B db_estado_out [0] $end
$var wire 1 C db_jogadafeita_out [6] $end
$var wire 1 D db_jogadafeita_out [5] $end
$var wire 1 E db_jogadafeita_out [4] $end
$var wire 1 F db_jogadafeita_out [3] $end
$var wire 1 G db_jogadafeita_out [2] $end
$var wire 1 H db_jogadafeita_out [1] $end
$var wire 1 I db_jogadafeita_out [0] $end
$var wire 1 J db_clock_out $end
$var wire 1 K db_iniciar_out $end
$var wire 1 L db_tem_jogada_out $end
$var reg 32 M caso [31:0] $end

$scope module dut $end
$var wire 1 N clock $end
$var wire 1 O reset $end
$var wire 1 P iniciar $end
$var wire 1 Q chaves [3] $end
$var wire 1 R chaves [2] $end
$var wire 1 S chaves [1] $end
$var wire 1 T chaves [0] $end
$var wire 1 & acertou $end
$var wire 1 ' errou $end
$var wire 1 ( pronto $end
$var wire 1 ) leds [3] $end
$var wire 1 * leds [2] $end
$var wire 1 + leds [1] $end
$var wire 1 , leds [0] $end
$var wire 1 - db_igual $end
$var wire 1 . db_contagem [6] $end
$var wire 1 / db_contagem [5] $end
$var wire 1 0 db_contagem [4] $end
$var wire 1 1 db_contagem [3] $end
$var wire 1 2 db_contagem [2] $end
$var wire 1 3 db_contagem [1] $end
$var wire 1 4 db_contagem [0] $end
$var wire 1 5 db_memoria [6] $end
$var wire 1 6 db_memoria [5] $end
$var wire 1 7 db_memoria [4] $end
$var wire 1 8 db_memoria [3] $end
$var wire 1 9 db_memoria [2] $end
$var wire 1 : db_memoria [1] $end
$var wire 1 ; db_memoria [0] $end
$var wire 1 < db_estado [6] $end
$var wire 1 = db_estado [5] $end
$var wire 1 > db_estado [4] $end
$var wire 1 ? db_estado [3] $end
$var wire 1 @ db_estado [2] $end
$var wire 1 A db_estado [1] $end
$var wire 1 B db_estado [0] $end
$var wire 1 C db_jogadafeita [6] $end
$var wire 1 D db_jogadafeita [5] $end
$var wire 1 E db_jogadafeita [4] $end
$var wire 1 F db_jogadafeita [3] $end
$var wire 1 G db_jogadafeita [2] $end
$var wire 1 H db_jogadafeita [1] $end
$var wire 1 I db_jogadafeita [0] $end
$var wire 1 J db_clock $end
$var wire 1 K db_iniciar $end
$var wire 1 L db_tem_jogada $end
$var wire 1 U zeraC $end
$var wire 1 V contaC $end
$var wire 1 W zeraR $end
$var wire 1 X registraR $end
$var wire 1 Y fimC $end
$var wire 1 Z igual $end
$var wire 1 [ db_contagem_hex [3] $end
$var wire 1 \ db_contagem_hex [2] $end
$var wire 1 ] db_contagem_hex [1] $end
$var wire 1 ^ db_contagem_hex [0] $end
$var wire 1 _ db_memoria_hex [3] $end
$var wire 1 ` db_memoria_hex [2] $end
$var wire 1 a db_memoria_hex [1] $end
$var wire 1 b db_memoria_hex [0] $end
$var wire 1 c db_jogada_hex [3] $end
$var wire 1 d db_jogada_hex [2] $end
$var wire 1 e db_jogada_hex [1] $end
$var wire 1 f db_jogada_hex [0] $end
$var wire 1 g db_estado_hex [3] $end
$var wire 1 h db_estado_hex [2] $end
$var wire 1 i db_estado_hex [1] $end
$var wire 1 j db_estado_hex [0] $end
$var wire 1 k jogada $end

$scope module uc $end
$var parameter 4 l inicial $end
$var parameter 4 m preparacao $end
$var parameter 4 n espera $end
$var parameter 4 o registra $end
$var parameter 4 p comparacao $end
$var parameter 4 q proximo $end
$var parameter 4 r derrota $end
$var parameter 4 s vitoria $end
$var wire 1 N clock $end
$var wire 1 O reset $end
$var wire 1 P iniciar $end
$var wire 1 Y fimC $end
$var wire 1 k jogada $end
$var wire 1 Z igual $end
$var reg 1 t zeraC $end
$var reg 1 u contaC $end
$var reg 1 v zeraR $end
$var reg 1 w registraR $end
$var reg 1 x pronto $end
$var reg 1 y errou $end
$var reg 1 z acertou $end
$var reg 4 { db_estado [3:0] $end
$var reg 4 | Eatual [3:0] $end
$var reg 4 } Eprox [3:0] $end
$upscope $end

$scope module fd $end
$var wire 1 N clock $end
$var wire 1 W zeraR $end
$var wire 1 U zeraC $end
$var wire 1 X registraR $end
$var wire 1 V contaC $end
$var wire 1 Q chaves [3] $end
$var wire 1 R chaves [2] $end
$var wire 1 S chaves [1] $end
$var wire 1 T chaves [0] $end
$var wire 1 Z chavesIgualMemoria $end
$var wire 1 Y fimC $end
$var wire 1 k jogada_feita $end
$var wire 1 L db_tem_jogada $end
$var wire 1 [ db_contagem [3] $end
$var wire 1 \ db_contagem [2] $end
$var wire 1 ] db_contagem [1] $end
$var wire 1 ^ db_contagem [0] $end
$var wire 1 c db_jogada [3] $end
$var wire 1 d db_jogada [2] $end
$var wire 1 e db_jogada [1] $end
$var wire 1 f db_jogada [0] $end
$var wire 1 _ db_memoria [3] $end
$var wire 1 ` db_memoria [2] $end
$var wire 1 a db_memoria [1] $end
$var wire 1 b db_memoria [0] $end
$var wire 1 ~ s_endereco [3] $end
$var wire 1 !! s_endereco [2] $end
$var wire 1 "! s_endereco [1] $end
$var wire 1 #! s_endereco [0] $end
$var wire 1 $! s_chaves [3] $end
$var wire 1 %! s_chaves [2] $end
$var wire 1 &! s_chaves [1] $end
$var wire 1 '! s_chaves [0] $end
$var wire 1 (! s_dado [3] $end
$var wire 1 )! s_dado [2] $end
$var wire 1 *! s_dado [1] $end
$var wire 1 +! s_dado [0] $end

$scope module contador $end
$var wire 1 N clock $end
$var wire 1 ,! clr $end
$var wire 1 -! ld $end
$var wire 1 .! ent $end
$var wire 1 V enp $end
$var wire 1 /! D [3] $end
$var wire 1 0! D [2] $end
$var wire 1 1! D [1] $end
$var wire 1 2! D [0] $end
$var reg 4 3! Q [3:0] $end
$var reg 1 4! rco $end
$upscope $end

$scope module registrador $end
$var wire 1 N clock $end
$var wire 1 W clear $end
$var wire 1 X enable $end
$var wire 1 Q D [3] $end
$var wire 1 R D [2] $end
$var wire 1 S D [1] $end
$var wire 1 T D [0] $end
$var wire 1 $! Q [3] $end
$var wire 1 %! Q [2] $end
$var wire 1 &! Q [1] $end
$var wire 1 '! Q [0] $end
$var reg 4 5! IQ [3:0] $end
$upscope $end

$scope module memoria $end
$var wire 1 N clock $end
$var wire 1 ~ address [3] $end
$var wire 1 !! address [2] $end
$var wire 1 "! address [1] $end
$var wire 1 #! address [0] $end
$var reg 4 6! data_out [3:0] $end
$upscope $end

$scope module comparador $end
$var wire 1 (! A [3] $end
$var wire 1 )! A [2] $end
$var wire 1 *! A [1] $end
$var wire 1 +! A [0] $end
$var wire 1 $! B [3] $end
$var wire 1 %! B [2] $end
$var wire 1 &! B [1] $end
$var wire 1 '! B [0] $end
$var wire 1 7! ALBi $end
$var wire 1 8! AGBi $end
$var wire 1 9! AEBi $end
$var wire 1 :! ALBo $end
$var wire 1 ;! AGBo $end
$var wire 1 Z AEBo $end
$var wire 1 <! CSL [4] $end
$var wire 1 =! CSL [3] $end
$var wire 1 >! CSL [2] $end
$var wire 1 ?! CSL [1] $end
$var wire 1 @! CSL [0] $end
$var wire 1 A! CSG [4] $end
$var wire 1 B! CSG [3] $end
$var wire 1 C! CSG [2] $end
$var wire 1 D! CSG [1] $end
$var wire 1 E! CSG [0] $end
$upscope $end

$scope module edge_detect $end
$var wire 1 N clock $end
$var wire 1 X reset $end
$var wire 1 L sinal $end
$var wire 1 k pulso $end
$var reg 1 F! reg0 $end
$var reg 1 G! reg1 $end
$upscope $end
$upscope $end

$scope module hexa7seg_CHAVES $end
$var wire 1 c hexa [3] $end
$var wire 1 d hexa [2] $end
$var wire 1 e hexa [1] $end
$var wire 1 f hexa [0] $end
$var reg 7 H! display [6:0] $end
$upscope $end

$scope module hexa7seg_CONT $end
$var wire 1 [ hexa [3] $end
$var wire 1 \ hexa [2] $end
$var wire 1 ] hexa [1] $end
$var wire 1 ^ hexa [0] $end
$var reg 7 I! display [6:0] $end
$upscope $end

$scope module hexa7seg_MEM $end
$var wire 1 _ hexa [3] $end
$var wire 1 ` hexa [2] $end
$var wire 1 a hexa [1] $end
$var wire 1 b hexa [0] $end
$var reg 7 J! display [6:0] $end
$upscope $end

$scope module hexa7seg_EST $end
$var wire 1 g hexa [3] $end
$var wire 1 h hexa [2] $end
$var wire 1 i hexa [1] $end
$var wire 1 j hexa [0] $end
$var reg 7 K! display [6:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1"
0#
0$
b0 %
b0 M
1t
0u
1v
0w
0x
0y
0z
b0 {
b0 |
b0 }
bx 3!
04!
b0 5!
bx 6!
0F!
xG!
b1000000 H!
bx I!
bx J!
b1000000 K!
b10100 !
b0 l
b11 m
b1 n
b100 o
b101 p
b110 q
b1110 r
b1101 s
0&
0'
0(
0,
0+
0*
0)
x-
x4
x3
x2
x1
x0
x/
x.
x;
x:
x9
x8
x7
x6
x5
0B
0A
0@
0?
0>
0=
1<
0I
0H
0G
0F
0E
0D
1C
1J
0K
0L
1U
0V
1W
0X
0Y
xZ
x^
x]
x\
x[
xb
xa
x`
x_
0f
0e
0d
0c
0j
0i
0h
0g
0k
x#!
x"!
x!!
x~
0'!
0&!
0%!
0$!
x+!
x*!
x)!
x(!
x@!
x?!
x>!
x=!
x<!
xE!
xD!
xC!
xB!
xA!
0T
0S
0R
0Q
0P
0O
1N
19!
08!
07!
02!
01!
00!
0/!
1.!
1-!
0,!
x:!
x;!
$end
#10
0"
0N
0J
#20
b1 M
1"
1N
1J
b0 3!
0G!
0#!
0"!
0!!
0~
0^
0]
0\
0[
b1000000 I!
04
03
02
01
00
0/
1.
#30
0"
0N
0J
1#
1O
#40
1"
1N
1J
b1 6!
1+!
0*!
0)!
0(!
0@!
1?!
1>!
1=!
1<!
0E!
0D!
0C!
0B!
0A!
1;!
0:!
1b
0a
0`
0_
0Z
0-
b1111001 J!
1;
0:
09
18
17
16
15
#50
0#
0"
0O
0N
0J
#60
1"
1N
1J
#70
0"
0N
0J
#80
1"
1N
1J
#90
0"
0N
0J
#100
1"
1N
1J
#110
0"
0N
0J
#120
1"
1N
1J
#130
0"
0N
0J
#140
1"
1N
1J
#150
0"
0N
0J
#160
1"
1N
1J
#170
0"
0N
0J
#180
1"
1N
1J
#190
0"
0N
0J
#200
1"
1N
1J
#210
0"
0N
0J
#220
1"
1N
1J
#230
0"
0N
0J
#240
1"
1N
1J
#250
b10 M
1$
0"
1P
0N
0J
1K
b11 }
#260
1"
1N
1J
b11 |
b1 }
b11 {
1j
1i
b110000 K!
1>
1=
0<
#270
0"
0N
0J
#280
1"
1N
1J
b1 |
0t
0v
b1 {
0U
1,!
0W
0i
b1111001 K!
1B
1?
1<
#290
0"
0N
0J
#300
1"
1N
1J
#310
0"
0N
0J
#320
1"
1N
1J
#330
0"
0N
0J
#340
1"
1N
1J
#350
0$
0"
0P
0N
0J
0K
#360
1"
1N
1J
#370
0"
0N
0J
#380
1"
1N
1J
#390
0"
0N
0J
#400
1"
1N
1J
#410
0"
0N
0J
#420
1"
1N
1J
#430
0"
0N
0J
#440
1"
1N
1J
#450
0"
0N
0J
#460
1"
1N
1J
#470
0"
0N
0J
#480
1"
1N
1J
#490
0"
0N
0J
#500
1"
1N
1J
#510
0"
0N
0J
#520
1"
1N
1J
#530
0"
0N
0J
#540
1"
1N
1J
#550
b11 M
0"
0N
0J
b1 %
1T
1L
#560
1"
1N
1J
1F!
1k
b100 }
#570
0"
0N
0J
#580
1"
1N
1J
b100 |
1G!
0k
b101 }
1w
b100 {
1X
0j
1h
b11001 K!
0=
0<
0F!
0G!
#590
0"
0N
0J
#600
1"
1N
1J
b101 |
b1 5!
1'!
1@!
1E!
1D!
1C!
1B!
1A!
0;!
1f
1Z
1-
1,
b1111001 H!
b110 }
0w
b101 {
1I
1F
1E
1D
0X
1j
b10010 K!
0B
1A
0?
#610
0"
0N
0J
#620
1"
1N
1J
b110 |
1F!
1k
b1 }
1u
b110 {
1V
0j
1i
b10 K!
0>
#630
0"
0N
0J
#640
1"
1N
1J
b1 |
b1 3!
1G!
1#!
0k
1^
b1111001 I!
0u
b1 {
14
11
10
1/
0V
1j
0i
0h
b1111001 K!
1B
0A
1?
1>
1=
1<
#650
0"
0N
0J
#660
1"
1N
1J
b10 6!
0+!
1*!
0@!
0E!
0D!
0C!
0B!
0A!
1;!
0b
1a
0Z
0-
b100100 J!
0;
19
08
07
05
#670
0"
0N
0J
#680
1"
1N
1J
#690
0"
0N
0J
#700
1"
1N
1J
#710
0"
0N
0J
#720
1"
1N
1J
#730
0"
0N
0J
#740
1"
1N
1J
#750
b0 %
0"
0T
0L
0N
0J
#760
1"
1N
1J
0F!
#770
0"
0N
0J
#780
1"
1N
1J
0G!
#790
0"
0N
0J
#800
1"
1N
1J
#810
0"
0N
0J
#820
1"
1N
1J
#830
0"
0N
0J
#840
1"
1N
1J
#850
0"
0N
0J
#860
1"
1N
1J
#870
0"
0N
0J
#880
1"
1N
1J
#890
0"
0N
0J
#900
1"
1N
1J
#910
0"
0N
0J
#920
1"
1N
1J
#930
0"
0N
0J
#940
1"
1N
1J
#950
b100 M
0"
0N
0J
b10 %
1S
1L
#960
1"
1N
1J
1F!
1k
b100 }
#970
0"
0N
0J
#980
1"
1N
1J
b100 |
1G!
0k
b101 }
1w
b100 {
1X
0j
1h
b11001 K!
0=
0<
0F!
0G!
#990
0"
0N
0J
#1000
1"
1N
1J
b101 |
b10 5!
0'!
1&!
1@!
1E!
1D!
1C!
1B!
1A!
0;!
0f
1e
1Z
1-
0,
1+
b100100 H!
b110 }
0w
b101 {
0I
1G
0F
0E
0C
0X
1j
b10010 K!
0B
1A
0?
#1010
0"
0N
0J
#1020
1"
1N
1J
b110 |
1F!
1k
b1 }
1u
b110 {
1V
0j
1i
b10 K!
0>
#1030
0"
0N
0J
#1040
1"
1N
1J
b1 |
b10 3!
1G!
0#!
1"!
0k
0^
1]
b100100 I!
0u
b1 {
04
12
01
00
0.
0V
1j
0i
0h
b1111001 K!
1B
0A
1?
1>
1=
1<
#1050
0"
0N
0J
#1060
1"
1N
1J
b100 6!
0*!
1)!
0?!
0D!
0C!
0B!
0A!
1;!
0a
1`
0Z
0-
b11001 J!
1;
09
18
17
06
#1070
0"
0N
0J
#1080
1"
1N
1J
#1090
0"
0N
0J
#1100
1"
1N
1J
#1110
0"
0N
0J
#1120
1"
1N
1J
#1130
0"
0N
0J
#1140
1"
1N
1J
#1150
b0 %
0"
0S
0L
0N
0J
#1160
1"
1N
1J
0F!
#1170
0"
0N
0J
#1180
1"
1N
1J
0G!
#1190
0"
0N
0J
#1200
1"
1N
1J
#1210
0"
0N
0J
#1220
1"
1N
1J
#1230
0"
0N
0J
#1240
1"
1N
1J
#1250
0"
0N
0J
#1260
1"
1N
1J
#1270
0"
0N
0J
#1280
1"
1N
1J
#1290
0"
0N
0J
#1300
1"
1N
1J
#1310
0"
0N
0J
#1320
1"