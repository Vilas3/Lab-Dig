$date
	Mon Jan 22 10:00:28 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 1 ! menor $end
$var wire 1 " maior $end
$var wire 1 # igual $end
$var wire 1 $ fim $end
$var wire 7 % display [6:0] $end
$var wire 4 & contagem [3:0] $end
$var reg 1 ' carrega $end
$var reg 4 ( chaves [3:0] $end
$var reg 1 ) clock $end
$var reg 1 * clock_tb $end
$var reg 1 + conta $end
$var reg 1 , zera $end
$scope module circuito $end
$var wire 1 ' carrega $end
$var wire 4 - chaves [3:0] $end
$var wire 1 ) clock $end
$var wire 1 + conta $end
$var wire 4 . db_contagem [3:0] $end
$var wire 1 , zera $end
$var wire 4 / s_contagem [3:0] $end
$var wire 1 ! menor $end
$var wire 1 " maior $end
$var wire 1 # igual $end
$var wire 1 $ fim $end
$var wire 7 0 display [6:0] $end
$scope module comparador $end
$var wire 1 1 AEBi $end
$var wire 1 # AEBo $end
$var wire 1 2 AGBi $end
$var wire 1 " AGBo $end
$var wire 1 3 ALBi $end
$var wire 1 ! ALBo $end
$var wire 4 4 B [3:0] $end
$var wire 5 5 CSL [4:0] $end
$var wire 5 6 CSG [4:0] $end
$var wire 4 7 A [3:0] $end
$upscope $end
$scope module contador $end
$var wire 4 8 D [3:0] $end
$var wire 1 ) clock $end
$var wire 1 9 clr $end
$var wire 1 + enp $end
$var wire 1 : ent $end
$var wire 1 ; ld $end
$var reg 4 < Q [3:0] $end
$var reg 1 $ rco $end
$upscope $end
$scope module hexa7seg $end
$var wire 4 = hexa [3:0] $end
$var reg 7 > display [6:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx >
bx =
bx <
1;
1:
19
b0 8
bx 7
bx 6
bx 5
b0 4
03
02
11
bx 0
bx /
bx .
b0 -
0,
0+
0*
1)
b0 (
0'
bx &
bx %
0$
x#
x"
x!
$end
#10
1*
#20
0*
#30
1*
0)
#40
0!
0"
1#
b11111 5
b1000000 %
b1000000 0
b1000000 >
b11111 6
b0 &
b0 .
b0 /
b0 7
b0 <
b0 =
09
0*
1)
1,
#50
1*
0)
#60
0*
#70
1*
#80
1!
b11110 6
0#
0*
b0 5
b1 (
b1 -
b1 4
b1 8
#90
1*
#100
0*
#110
0!
1#
b11111 5
b1111001 %
b1111001 0
b1111001 >
b11111 6
b1 &
b1 .
b1 /
b1 7
b1 <
b1 =
19
1*
1)
1+
0,
#120
0*
0)
#130
1*
#140
0*
#150
b100100 %
b100100 0
b100100 >
b10 &
b10 .
b10 /
b10 7
b10 <
b10 =
0!
b11111 6
1#
1*
1)
b11111 5
b10 (
b10 -
b10 4
b10 8
#160
0*
0)
#170
1"
0#
b11110 5
b110000 %
b110000 0
b110000 >
b0 6
b11 &
b11 .
b11 /
b11 7
b11 <
b11 =
1*
1)
#180
0*
0)
#190
1*
#200
0*
#210
0"
1!
b11100 6
1*
b10 5
b110 (
b110 -
b110 4
b110 8
#220
0*
#230
b1 5
b11001 %
b11001 0
b11001 >
b11101 6
b100 &
b100 .
b100 /
b100 7
b100 <
b100 =
1*
1)
#240
0*
0)
#250
b0 5
b10010 %
b10010 0
b10010 >
b11110 6
b101 &
b101 .
b101 /
b101 7
b101 <
b101 =
1*
1)
#260
0*
0)
#270
0!
1#
b11111 5
b10 %
b10 0
b10 >
b11111 6
b110 &
b110 .
b110 /
b110 7
b110 <
b110 =
1*
1)
#280
0*
0)
#290
1"
0#
b11110 5
b1111000 %
b1111000 0
b1111000 >
b0 6
b111 &
b111 .
b111 /
b111 7
b111 <
b111 =
1*
1)
#300
0*
0)
#310
b11101 5
b0 %
b0 0
b0 >
b1 6
b1000 &
b1000 .
b1000 /
b1000 7
b1000 <
b1000 =
1*
1)
#320
0*
0)
#330
b11100 5
b10000 %
b10000 0
b10000 >
b10 6
b1001 &
b1001 .
b1001 /
b1001 7
b1001 <
b1001 =
1*
1)
#340
0*
0)
#350
b11011 5
b1000 %
b1000 0
b1000 >
b11 6
b1010 &
b1010 .
b1010 /
b1010 7
b1010 <
b1010 =
1*
1)
#360
0*
0)
#370
b11010 5
b11 %
b11 0
b11 >
b100 6
b1011 &
b1011 .
b1011 /
b1011 7
b1011 <
b1011 =
1*
1)
#380
0*
0)
#390
b11001 5
b1000110 %
b1000110 0
b1000110 >
b101 6
b1100 &
b1100 .
b1100 /
b1100 7
b1100 <
b1100 =
1*
1)
#400
0*
0)
#410
b11000 5
b100001 %
b100001 0
b100001 >
b110 6
b1101 &
b1101 .
b1101 /
b1101 7
b1101 <
b1101 =
1*
1)
#420
0*
0)
#430
b10111 5
b110 %
b110 0
b110 >
b111 6
b1110 &
b1110 .
b1110 /
b1110 7
b1110 <
b1110 =
1*
1)
#440
0*
0)
#450
1*
#460
b10110 5
1$
b1110 %
b1110 0
b1110 >
b1000 6
b1111 &
b1111 .
b1111 /
b1111 7
b1111 <
b1111 =
0*
1)
#470
1*
#480
0*
#490
1*
#500
0*
#510
1*
#520
0*
